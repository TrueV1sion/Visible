[flake8]
max-line-length = 79
exclude = .git,__pycache__,build,dist,*.egg-info
ignore = E203, W503
per-file-ignores =
    __init__.py: F401

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 79

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_optional = True

[mypy.plugins.numpy.*]
ignore_missing_imports = True

[mypy.plugins.pandas.*]
ignore_missing_imports = True

[mypy.plugins.sklearn.*]
ignore_missing_imports = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_functions = test_*
addopts = -v --cov=ai_orchestration --cov-report=term-missing

[coverage:run]
source = ai_orchestration
omit =
    */tests/*
    */migrations/*
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[pylint]
max-line-length = 79
disable =
    C0111,  # missing-docstring
    C0103,  # invalid-name
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments
    W0511,  # fixme
    W0621,  # redefined-outer-name
    W0703,  # broad-except
    R0914,  # too-many-locals
    R0915   # too-many-statements
extension-pkg-whitelist = numpy,torch,pandas
good-names = i,j,k,ex,Run,_,x,y,z,df,id
ignore = CVS
ignore-patterns = test_.*?py
notes = FIXME,XXX,TODO
output-format = colorized
reports = no
score = no 